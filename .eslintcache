[{"F:\\task\\New folder\\tweets\\src\\reportWebVitals.js":"1","F:\\task\\New folder\\tweets\\src\\components\\sidebar.js":"2","F:\\task\\New folder\\tweets\\src\\components\\feeds.js":"3","F:\\task\\New folder\\tweets\\src\\components\\details.js":"4","F:\\task\\New folder\\tweets\\src\\App.js":"5","F:\\task\\New folder\\tweets\\src\\index.js":"6"},{"size":362,"mtime":1606684595484,"results":"7","hashOfConfig":"8"},{"size":2454,"mtime":1607725266039,"results":"9","hashOfConfig":"8"},{"size":2327,"mtime":1607729851688,"results":"10","hashOfConfig":"8"},{"size":1274,"mtime":1607731100449,"results":"11","hashOfConfig":"8"},{"size":243,"mtime":1607641792337,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1606684595484,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c4w9le",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\task\\New folder\\tweets\\src\\reportWebVitals.js",[],"F:\\task\\New folder\\tweets\\src\\components\\sidebar.js",["30","31","32"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport AlignItemsList from './feeds'\r\nimport Details from './details'\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n//   appBar: {\r\n//     [theme.breakpoints.up('sm')]: {\r\n//       width: `calc(100% - ${drawerWidth}px)`,\r\n//       marginLeft: drawerWidth,\r\n//     },\r\n//   },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    background: \"grey\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  content1: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const classes = useStyles();\r\n  const [item, setItem] = useState(null);\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n          <ListItem button key={\"Tweets\"}>\r\n            <ListItemText primary={\"Tweets\"} />\r\n          </ListItem>\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  const handleClick = (item) => {\r\n      setItem(item);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <AlignItemsList handleClick={handleClick}></AlignItemsList>\r\n      </main>\r\n      <main>\r\n      {/* {item != null ? <AlignItemsList></AlignItemsList> : <div></div> } */}\r\n         <Details></Details>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default ResponsiveDrawer;\r\n",["33","34"],"F:\\task\\New folder\\tweets\\src\\components\\feeds.js",["35"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nlet x = 1;\r\nlet y = 0;\r\n\r\nexport default function AlignItemsList({props}) {\r\n  const classes = useStyles();\r\n  const [appState, setAppState] = useState({\r\n    loading: true,\r\n    data: null,\r\n  });\r\n  \r\n  const handleClick = () => {\r\n    localStorage.setItem('tweet', x);\r\n    console.log(x)\r\n    x++\r\n    \r\n  }\r\n  useEffect(() => {\r\n    const apiUrl = 'https://sportscentral.io/api/popular-tweets';\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setAppState({ loading: false, data: data.allNews.data });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n      <div>\r\n    {appState.loading ? <div></div> :\r\n        <List className={classes.root}>\r\n        {appState.data.map((item) => \r\n        <div key={item.id}>\r\n\r\n        <ListItem alignItems=\"flex-start\" button onClick={() => handleClick()}>\r\n        <ListItemAvatar>\r\n          <Avatar src={item.additional.tweeet.user.profile_image_url} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={item.posted_date}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                component=\"span\"\r\n                variant=\"body2\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                {item.additional.tweeet.user.name}\r\n              </Typography>\r\n              <Divider variant=\"inset\" component=\"li\" />\r\n              {item.description}\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      </div>\r\n        )}\r\n        </List> }\r\n      </div>\r\n    \r\n  );\r\n}\r\n","F:\\task\\New folder\\tweets\\src\\components\\details.js",[],"F:\\task\\New folder\\tweets\\src\\App.js",["36"],"import logo from './logo.svg';\nimport './App.css';\n\nimport ResponsiveDrawer from './components/sidebar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ResponsiveDrawer></ResponsiveDrawer>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\task\\New folder\\tweets\\src\\index.js",[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":10,"column":22,"nodeType":"39","messageId":"40","endLine":10,"endColumn":30},{"ruleId":"37","severity":1,"message":"42","line":52,"column":10,"nodeType":"39","messageId":"40","endLine":52,"endColumn":14},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"37","severity":1,"message":"47","line":24,"column":5,"nodeType":"39","messageId":"40","endLine":24,"endColumn":6},{"ruleId":"37","severity":1,"message":"48","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","'item' is assigned a value but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"'y' is assigned a value but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]